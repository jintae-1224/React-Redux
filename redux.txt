1. Redux 개요
=> 단일 스토어다

1.1 만들기 : 단일 스토어 사용 준비하기
    * import redux
    * 액션을 정의하고,
    * 액션을 사용하는, 리듀서를 만들고,
    * 리듀서들을 합친다.
    * 최종 합쳐진 리듀서를 인자로, 단일 스토어를 만든다.

1.2 사용하기 : 준비한 스토어를 리액트 컴포넌트에서 사용하기
    * import react-redux
    * connect(& hooks) 함수를 이용해서 컴포넌트에 연결

설치 : npm i redux

2. 리덕스의 액션
    * 액션은 사실 그냥 객체(object)이다.
    * 두가지 형태의 액션
        1. {type:'Test'}    // payload 없는 액션
        2. {type:'Test',params: 'hello'}    // payload 있는 액션
    * type만이 필수 프로퍼티 이며, type은 문자열 이다.

    2-1. 리덕스의 액션 생성자란?
        function 액션생성자(...args) {return 액션;}
        * 액션을 생성하는 함수를 "액션 생성자(Action Creator)"라고 한다.
        * 함수를 통해 액션을 생성해서, 액션 객체를 리턴해준다.
        * createTest('hello');  // {type: 'Test', params: 'hello'} 리턴

    2-2. 리덕스의 액션의 하는 일?
        * 액션 생성자를 통해 액션을 만들어 낸다.
        * 만들어낸 액션 객체를 리덕스 스토어에 보낸다.
        * 리더스 스토어가 액션 객체를 받으면 스토어의 상태 값이 변경 된다.
        * 변경된 상태 값에 의해 상태를 이용하고 있는 컴포넌트가 변경된다.
        * 액션은 스토어에 보내는 일종의 인풋이라 생각 할 수 있다.

    2-3. 액션을 준비하기 위해서는?
        1) 액션의 아비을 정의하여 변수로 빼는 단계
            * 강제 X
            * 그냥 타입을 문자열로 넣기에는 실수를 유발할 가능성이 큼
            * 미리 정의한 변수를 사용하면, 스펠링에 주의를 덜 기울려도 된다.
        2) 액션 객체를 만들어 내는 함수를 만드는 단계
            * 하나의 액션 객체를 만들기 위해 하나의 함수를 만들어 낸다.
            * 액션의 타입은 미리 정의한 타입 변수로 부터 가져와서 사용

